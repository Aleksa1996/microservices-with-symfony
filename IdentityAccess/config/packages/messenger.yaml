framework:
    messenger:
        default_bus: event.bus
        buses:
            command.bus:
                middleware:
                    - doctrine_ping_connection
                    - doctrine_close_connection
                    - App\Common\Infrastructure\Bus\Symfony\Command\Middleware\PublishDomainEventsAfterCurrentBusMiddleware
                    - dispatch_after_current_bus
                    - doctrine_transaction

            query.bus:

            event.bus:
                default_middleware: allow_no_handlers
        # Uncomment this (and the failed transport below) to send failed messages to this transport for later handling.
        # failure_transport: failed

        transports:
            # https://symfony.com/doc/current/messenger.html#transport-configuration
            # async: '%env(MESSENGER_TRANSPORT_DSN)%'
            # failed: 'doctrine://default?queue_name=failed'
            # sync: 'sync://'
            sync: 'sync://'
            async:
                dsn: '%env(MESSENGER_TRANSPORT_DSN)%'
                retry_strategy:
                    max_retries: 3
                    delay: 1000
                    multiplier: 2
                    max_delay: 0
            blog_microservice:
                dsn: '%env(MESSENGER_BLOG_MS_TRANSPORT_DSN)%'
                serializer: messenger.transport.symfony_serializer
                retry_strategy:
                    max_retries: 3
                    delay: 1000
                    multiplier: 2
                    max_delay: 0
        routing:
            'App\IdentityAccess\Domain\UserRegistered': ['blog_microservice']